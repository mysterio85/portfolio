<?php

/* SensioDistributionBundle:Configurator:check.html.twig */
class __TwigTemplate_09cb897bcd5bbdf0909a37634a0f51be7de11997925864250d7c32e145c7a999 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = $this->env->loadTemplate("SensioDistributionBundle::Configurator/layout.html.twig");

        $this->blocks = array(
            'content' => array($this, 'block_content'),
        );
    }

    protected function doGetParent(array $context)
    {
        return "SensioDistributionBundle::Configurator/layout.html.twig";
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        $this->parent->display($context, array_merge($this->blocks, $blocks));
    }

    // line 3
    public function block_content($context, array $blocks = array())
    {
        // line 4
        echo "    ";
        if (twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")))) {
            // line 5
            echo "        <h1>Major Problems that need to be fixed now</h1>
        <p>
            We have detected <strong>";
            // line 7
            echo twig_escape_filter($this->env, twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors"))), "html", null, true);
            echo "</strong> major problems.
            You <em>must</em> fix them before continuing:
        </p>
        <ol>
            ";
            // line 11
            $context['_parent'] = (array) $context;
            $context['_seq'] = twig_ensure_traversable((isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")));
            foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
                // line 12
                echo "                <li>";
                echo twig_escape_filter($this->env, (isset($context["message"]) ? $context["message"] : $this->getContext($context, "message")), "html", null, true);
                echo "</li>
            ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 14
            echo "        </ol>
    ";
        }
        // line 16
        echo "
    ";
        // line 17
        if (twig_length_filter($this->env, (isset($context["minors"]) ? $context["minors"] : $this->getContext($context, "minors")))) {
            // line 18
            echo "        <h1>Some Recommendations</h1>

        <p>
            ";
            // line 21
            if (twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")))) {
                // line 22
                echo "            Additionally, we
            ";
            } else {
                // line 24
                echo "            We
            ";
            }
            // line 26
            echo "            have detected some minor problems that we <em>recommend</em> you to fix to have a better Symfony
            experience:

            <ol>
                ";
            // line 30
            $context['_parent'] = (array) $context;
            $context['_seq'] = twig_ensure_traversable((isset($context["minors"]) ? $context["minors"] : $this->getContext($context, "minors")));
            foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
                // line 31
                echo "                    <li>";
                echo twig_escape_filter($this->env, (isset($context["message"]) ? $context["message"] : $this->getContext($context, "message")), "html", null, true);
                echo "</li>
                ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 33
            echo "            </ol>
        </p>

    ";
        }
        // line 37
        echo "
    ";
        // line 38
        if ((!twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors"))))) {
            // line 39
            echo "        <ul class=\"symfony_list\">
            <li><a href=\"";
            // line 40
            echo twig_escape_filter($this->env, (isset($context["url"]) ? $context["url"] : $this->getContext($context, "url")), "html", null, true);
            echo "\">Configure your Symfony Application online</a></li>
        </ul>
    ";
        }
    }

    public function getTemplateName()
    {
        return "SensioDistributionBundle:Configurator:check.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  810 => 492,  792 => 488,  788 => 486,  727 => 476,  706 => 473,  686 => 468,  682 => 467,  679 => 466,  677 => 465,  567 => 414,  389 => 160,  334 => 141,  328 => 139,  357 => 123,  672 => 345,  668 => 344,  664 => 342,  660 => 464,  651 => 337,  647 => 336,  629 => 454,  626 => 325,  622 => 452,  613 => 320,  606 => 449,  591 => 309,  588 => 308,  552 => 293,  541 => 290,  522 => 406,  519 => 278,  505 => 270,  489 => 262,  483 => 258,  479 => 256,  471 => 253,  465 => 249,  438 => 236,  418 => 224,  397 => 213,  367 => 339,  353 => 328,  297 => 104,  446 => 197,  441 => 196,  431 => 189,  394 => 168,  373 => 156,  951 => 304,  941 => 299,  938 => 298,  930 => 294,  922 => 293,  919 => 292,  917 => 291,  914 => 290,  908 => 288,  906 => 287,  895 => 283,  886 => 280,  884 => 279,  875 => 276,  870 => 274,  868 => 271,  858 => 263,  853 => 260,  845 => 255,  840 => 253,  836 => 251,  834 => 250,  824 => 246,  822 => 245,  818 => 243,  807 => 491,  804 => 237,  790 => 235,  787 => 234,  782 => 305,  775 => 485,  773 => 234,  770 => 233,  762 => 224,  759 => 223,  755 => 222,  740 => 216,  722 => 213,  719 => 212,  709 => 210,  702 => 472,  698 => 471,  690 => 469,  684 => 203,  681 => 202,  670 => 199,  667 => 198,  665 => 197,  659 => 195,  646 => 192,  637 => 190,  634 => 456,  628 => 186,  621 => 185,  618 => 184,  609 => 319,  605 => 181,  602 => 317,  586 => 175,  556 => 226,  542 => 162,  539 => 161,  533 => 284,  517 => 404,  506 => 157,  492 => 144,  484 => 138,  481 => 137,  466 => 127,  462 => 202,  386 => 159,  383 => 207,  378 => 157,  375 => 104,  372 => 103,  364 => 150,  356 => 103,  624 => 224,  620 => 451,  612 => 183,  601 => 446,  594 => 212,  585 => 307,  580 => 207,  574 => 205,  572 => 166,  566 => 164,  559 => 296,  551 => 199,  545 => 291,  526 => 190,  507 => 165,  497 => 267,  485 => 124,  463 => 248,  447 => 113,  424 => 91,  412 => 222,  410 => 221,  406 => 111,  404 => 109,  401 => 172,  391 => 163,  376 => 205,  369 => 148,  359 => 144,  333 => 132,  329 => 188,  326 => 138,  318 => 111,  261 => 50,  198 => 55,  306 => 286,  303 => 106,  292 => 91,  287 => 77,  280 => 87,  178 => 59,  12 => 36,  778 => 251,  763 => 244,  760 => 243,  748 => 242,  745 => 219,  742 => 240,  736 => 238,  734 => 215,  717 => 233,  714 => 232,  711 => 231,  703 => 226,  700 => 225,  653 => 218,  650 => 217,  644 => 335,  633 => 209,  616 => 207,  599 => 179,  595 => 205,  587 => 203,  584 => 202,  581 => 305,  578 => 200,  573 => 198,  546 => 166,  534 => 162,  531 => 283,  521 => 182,  513 => 179,  499 => 268,  475 => 169,  473 => 254,  468 => 160,  454 => 244,  448 => 240,  445 => 152,  429 => 188,  422 => 226,  399 => 139,  396 => 138,  348 => 140,  345 => 147,  340 => 145,  330 => 103,  307 => 128,  300 => 105,  291 => 102,  286 => 112,  90 => 37,  321 => 135,  295 => 178,  274 => 110,  236 => 42,  1414 => 421,  1408 => 419,  1402 => 417,  1400 => 416,  1398 => 415,  1394 => 414,  1385 => 413,  1383 => 412,  1380 => 411,  1367 => 405,  1361 => 403,  1355 => 401,  1353 => 400,  1351 => 399,  1347 => 398,  1341 => 397,  1339 => 396,  1336 => 395,  1323 => 389,  1317 => 387,  1311 => 385,  1309 => 384,  1307 => 383,  1303 => 382,  1297 => 381,  1291 => 380,  1287 => 379,  1283 => 378,  1279 => 377,  1273 => 376,  1271 => 375,  1268 => 374,  1256 => 369,  1251 => 368,  1249 => 367,  1246 => 366,  1237 => 360,  1231 => 358,  1228 => 357,  1223 => 356,  1221 => 355,  1218 => 354,  1211 => 349,  1202 => 347,  1198 => 346,  1195 => 345,  1192 => 344,  1190 => 343,  1187 => 342,  1179 => 338,  1177 => 337,  1174 => 336,  1168 => 332,  1162 => 330,  1159 => 329,  1157 => 328,  1154 => 327,  1145 => 322,  1143 => 321,  1118 => 320,  1115 => 319,  1112 => 318,  1109 => 317,  1106 => 316,  1103 => 315,  1100 => 314,  1098 => 313,  1095 => 312,  1088 => 308,  1084 => 307,  1079 => 306,  1077 => 305,  1074 => 304,  1067 => 299,  1064 => 298,  1056 => 293,  1053 => 292,  1051 => 291,  1048 => 290,  1040 => 285,  1036 => 284,  1032 => 283,  1029 => 282,  1027 => 281,  1024 => 280,  1016 => 276,  1014 => 272,  1012 => 271,  1009 => 270,  1004 => 266,  982 => 261,  979 => 260,  976 => 259,  973 => 258,  970 => 257,  967 => 256,  964 => 255,  961 => 273,  958 => 272,  955 => 271,  952 => 251,  950 => 250,  947 => 302,  939 => 243,  936 => 297,  934 => 241,  931 => 240,  923 => 236,  920 => 235,  918 => 234,  915 => 233,  903 => 286,  900 => 228,  897 => 284,  894 => 226,  892 => 282,  889 => 224,  881 => 278,  878 => 219,  876 => 218,  873 => 275,  865 => 270,  862 => 269,  860 => 211,  857 => 210,  849 => 206,  846 => 205,  844 => 204,  841 => 203,  833 => 199,  830 => 248,  828 => 197,  825 => 196,  817 => 192,  814 => 191,  812 => 240,  809 => 239,  801 => 236,  798 => 235,  796 => 489,  793 => 264,  785 => 178,  783 => 177,  780 => 269,  772 => 248,  769 => 247,  767 => 232,  764 => 169,  756 => 165,  753 => 164,  751 => 220,  749 => 479,  746 => 478,  739 => 239,  729 => 235,  724 => 154,  721 => 153,  715 => 211,  712 => 150,  710 => 475,  707 => 148,  699 => 142,  697 => 141,  696 => 140,  695 => 139,  694 => 470,  689 => 137,  680 => 134,  675 => 200,  662 => 196,  658 => 124,  654 => 123,  649 => 462,  643 => 191,  640 => 334,  638 => 210,  619 => 113,  617 => 112,  614 => 111,  598 => 107,  596 => 178,  593 => 310,  576 => 199,  564 => 193,  557 => 295,  550 => 178,  547 => 93,  527 => 408,  515 => 276,  512 => 84,  509 => 272,  503 => 156,  496 => 172,  493 => 155,  478 => 74,  467 => 72,  456 => 123,  450 => 121,  428 => 230,  414 => 144,  408 => 176,  390 => 136,  388 => 42,  377 => 129,  371 => 156,  363 => 153,  350 => 327,  342 => 137,  335 => 134,  332 => 116,  316 => 16,  313 => 183,  290 => 119,  276 => 111,  266 => 366,  255 => 101,  245 => 83,  194 => 68,  212 => 78,  200 => 72,  184 => 63,  180 => 49,  563 => 298,  560 => 162,  558 => 190,  553 => 223,  549 => 411,  543 => 179,  537 => 176,  532 => 410,  528 => 160,  525 => 280,  523 => 189,  518 => 180,  514 => 167,  511 => 230,  508 => 165,  501 => 163,  491 => 157,  487 => 156,  460 => 143,  455 => 115,  449 => 198,  442 => 151,  439 => 195,  436 => 235,  433 => 149,  426 => 116,  420 => 114,  415 => 180,  411 => 143,  405 => 141,  403 => 48,  380 => 158,  366 => 125,  354 => 142,  331 => 140,  325 => 129,  308 => 287,  304 => 181,  272 => 91,  249 => 74,  233 => 87,  216 => 79,  155 => 47,  124 => 51,  81 => 23,  192 => 53,  188 => 90,  175 => 58,  320 => 127,  317 => 185,  311 => 14,  288 => 118,  284 => 76,  279 => 77,  275 => 105,  256 => 96,  253 => 100,  250 => 44,  237 => 71,  232 => 88,  222 => 83,  210 => 77,  185 => 74,  160 => 39,  153 => 77,  150 => 55,  110 => 38,  100 => 36,  692 => 399,  683 => 223,  678 => 201,  676 => 385,  666 => 222,  661 => 220,  656 => 219,  652 => 194,  645 => 369,  641 => 368,  635 => 226,  631 => 327,  625 => 453,  615 => 354,  607 => 218,  597 => 342,  590 => 177,  583 => 334,  579 => 332,  577 => 303,  575 => 328,  569 => 300,  565 => 324,  555 => 200,  548 => 292,  540 => 164,  536 => 194,  529 => 409,  524 => 158,  516 => 294,  510 => 178,  504 => 164,  500 => 291,  495 => 145,  490 => 154,  486 => 286,  482 => 285,  470 => 130,  464 => 71,  459 => 246,  452 => 268,  434 => 256,  421 => 90,  417 => 145,  400 => 214,  385 => 159,  361 => 152,  344 => 119,  339 => 92,  324 => 113,  310 => 83,  302 => 125,  296 => 121,  282 => 161,  270 => 102,  259 => 103,  244 => 43,  226 => 84,  152 => 46,  104 => 37,  358 => 151,  351 => 120,  347 => 191,  343 => 146,  338 => 135,  327 => 114,  323 => 128,  319 => 124,  315 => 131,  301 => 80,  299 => 8,  293 => 120,  289 => 113,  281 => 114,  277 => 136,  271 => 374,  265 => 105,  262 => 98,  260 => 363,  257 => 103,  251 => 101,  248 => 97,  239 => 64,  225 => 67,  213 => 78,  202 => 94,  174 => 65,  127 => 35,  267 => 101,  263 => 95,  231 => 83,  218 => 97,  207 => 75,  205 => 108,  195 => 54,  186 => 51,  181 => 65,  165 => 83,  146 => 34,  137 => 29,  134 => 39,  34 => 5,  53 => 17,  77 => 25,  20 => 1,  23 => 13,  114 => 50,  84 => 27,  242 => 82,  228 => 41,  197 => 69,  190 => 76,  172 => 57,  113 => 40,  76 => 28,  58 => 14,  126 => 66,  215 => 280,  211 => 81,  206 => 57,  191 => 67,  170 => 84,  167 => 56,  161 => 63,  148 => 49,  129 => 67,  118 => 49,  97 => 41,  70 => 26,  65 => 17,  480 => 75,  474 => 122,  469 => 158,  461 => 70,  457 => 245,  453 => 199,  444 => 238,  440 => 148,  437 => 61,  435 => 146,  430 => 118,  427 => 143,  423 => 57,  413 => 241,  409 => 132,  407 => 110,  402 => 215,  398 => 88,  393 => 211,  387 => 164,  384 => 109,  381 => 106,  379 => 154,  374 => 128,  368 => 152,  365 => 197,  362 => 130,  360 => 104,  355 => 329,  341 => 118,  337 => 22,  322 => 86,  314 => 84,  312 => 130,  309 => 129,  305 => 115,  298 => 120,  294 => 90,  285 => 175,  283 => 115,  278 => 98,  268 => 373,  264 => 74,  258 => 94,  252 => 68,  247 => 75,  241 => 93,  229 => 87,  220 => 81,  214 => 63,  177 => 43,  169 => 78,  140 => 58,  132 => 57,  128 => 47,  107 => 37,  61 => 23,  273 => 174,  269 => 107,  254 => 46,  243 => 92,  240 => 72,  238 => 312,  235 => 89,  230 => 62,  227 => 86,  224 => 81,  221 => 38,  219 => 101,  217 => 64,  208 => 76,  204 => 57,  179 => 98,  159 => 90,  143 => 51,  135 => 51,  119 => 40,  102 => 33,  71 => 23,  67 => 18,  63 => 21,  59 => 22,  38 => 7,  94 => 21,  89 => 30,  85 => 23,  75 => 28,  68 => 12,  56 => 16,  87 => 33,  21 => 2,  26 => 3,  93 => 38,  88 => 30,  78 => 24,  46 => 14,  27 => 7,  44 => 11,  31 => 4,  28 => 3,  201 => 106,  196 => 92,  183 => 50,  171 => 155,  166 => 54,  163 => 82,  158 => 80,  156 => 62,  151 => 59,  142 => 30,  138 => 49,  136 => 71,  121 => 50,  117 => 39,  105 => 25,  91 => 34,  62 => 16,  49 => 12,  24 => 2,  25 => 12,  19 => 1,  79 => 29,  72 => 21,  69 => 26,  47 => 15,  40 => 11,  37 => 7,  22 => 2,  246 => 136,  157 => 89,  145 => 74,  139 => 49,  131 => 45,  123 => 61,  120 => 31,  115 => 40,  111 => 47,  108 => 47,  101 => 33,  98 => 34,  96 => 35,  83 => 30,  74 => 22,  66 => 25,  55 => 38,  52 => 12,  50 => 16,  43 => 12,  41 => 19,  35 => 5,  32 => 6,  29 => 3,  209 => 58,  203 => 73,  199 => 93,  193 => 51,  189 => 66,  187 => 75,  182 => 87,  176 => 86,  173 => 85,  168 => 61,  164 => 55,  162 => 59,  154 => 60,  149 => 35,  147 => 75,  144 => 42,  141 => 73,  133 => 69,  130 => 46,  125 => 42,  122 => 41,  116 => 57,  112 => 39,  109 => 52,  106 => 51,  103 => 38,  99 => 23,  95 => 39,  92 => 31,  86 => 33,  82 => 26,  80 => 29,  73 => 23,  64 => 24,  60 => 20,  57 => 19,  54 => 19,  51 => 37,  48 => 16,  45 => 11,  42 => 8,  39 => 10,  36 => 9,  33 => 6,  30 => 7,);
    }
}
